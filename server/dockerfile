# Build stage
FROM golang:1.24-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache gcc musl-dev git

# Copy go mod files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o server .

# Runtime stage
FROM alpine:3.18

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Copy the built binary from the builder stage
COPY --from=builder /app/server /app/
COPY --from=builder /app/migrations /app/migrations

# The .env file is mounted from the host via docker-compose volume
# No need to copy it here

# Create volume mount points
VOLUME ["/app/firebase-credentials"]

# Expose the application port
EXPOSE 8080

# Set environment variables
ENV GIN_MODE=release
ENV MIGRATION_PATH=/app/migrations

# Run the application
CMD ["/app/server"]
